@model IdentityDemo.Models.AccountViewModels.RegisterViewModel

@{
    Layout = "_LoginLayout";
}

<div class="container">
    <div class="row">

        <div class='col-md-3'></div>
        <div class="col-md-6">
            <div class="center gap fade-down section-heading">
                <img id="logo" src="~/images/ScoreExec copy.png" />
            </div>
            <div class="login-box well">
                <form asp-action="Register" enctype="multipart/form-data">
                    <div class="form-group has-feedback">
                        <input type="text" id="UserName" required class="form-control" asp-for="UserName" placeholder="Aamir123">

                    </div>
                    <div class="form-group has-feedback">
                        <input type="email" id="Email" required class="form-control" asp-for="Email" placeholder="Email">

                    </div>
                    <div class="form-group has-feedback">
                        <input type="email" id="ConfirmEmail" required class="form-control" placeholder="Confirm Email">

                    </div>
                    <div class="form-group has-feedback">
                        <input type="password" id="Password" required class="form-control" asp-for="Password" placeholder="Password">

                    </div>
                    <div class="form-group has-feedback">
                        <input type="password" id="ConfirmPass" required class="form-control" placeholder="Retype password" asp-for="ConfirmPassword">

                    </div>
                    <div class="form-group has-feedback">
                        <input id="PhoneNumber" class="form-control" required placeholder="Phone" asp-for="PhoneNumber" data-inputmask='"mask": "9999-9999999"' data-mask>

                    </div>
                    <div class="form-group">
                        <label>User Name</label><span id="userNameMessage"></span><br />
                        <label>Email</label><span id="EmailError"></span><br />
                        <label>Confirm Email</label><span id="ConfirmEmailError"></span><br />
                        <label>Password</label><span id="PasswordError"></span><br />
                        <label>Confirm Password</label><span id="ConfirmPassError"></span>
                    </div>

                    <div class="row">
                        <div class="col-xs-8">
                            <div class="checkbox icheck">
                                <label>
                                    <input id="input" type="checkbox"> I agree to the terms
                                </label>
                            </div>
                        </div>
                        <!-- /.col -->
                        <div class="col-xs-4">
                            <button type="submit" disabled id="CreateBtn" class="btn btn-primary btn-block btn-flat">Register</button>
                        </div>
                        <!-- /.col -->
                    </div>
                </form>
                <a id="AlreadyAccount" style="cursor: pointer" class="text-center">Already have a account</a><br />
                <a id="Guest" style="cursor: pointer" class="text-center">Continue as a guest</a>

            </div>
        </div>
        <div class='col-md-3'></div>
    </div>
</div>



@section scripts {
    <script src="~/plugins/input-mask/jquery.inputmask.js"></script>
    <script src="~/plugins/input-mask/jquery.inputmask.date.extensions.js"></script>
    <script src="~/plugins/input-mask/jquery.inputmask.extensions.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <link rel="stylesheet" href="../../plugins/iCheck/square/blue.css">
    <script src="../../plugins/iCheck/icheck.min.js"></script>
    <style>
        #logo {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 80px;
            width: 300px;
        }
    </style>

    <script>
        $('[data-mask]').inputmask()

        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });

        //Select2
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });

        $('#AlreadyAccount').click(function () {
            $(function () {
                window.location = '/'
            });

        })
        $('#Guest').click(function () {
            $(function () {
                window.location = '/Home/Index'
            });

        })


        var Already = function () {

            window.location = 'Login'
        }

        var header = new Headers();
        header.append("content-type", "application/json");



        function validateUserName(userName) {
            var re = /^(?=.*[0-9].)(?=.*[a-z].*[a-z].*[a-z]).{6,}$/;
            return re.test(String(userName));
        }

        const state = {
            isEmailValid: true,
            isPasswordValid: false,
            isConfirmPasswordValid: false,
            isConfirmEmail: false,
            isUserValid: false
        };

        function validatePassword(password) {
            var re = /^(?=.*[A-Z])(?=.*[!@@#$&*])(?=.*[0-9].)(?=.*[a-z].*[a-z].*[a-z]).{6,}$/;
            return re.test(String(password));
        }
        function validateEmail(email) {
            var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }
        $('#ConfirmPass').blur(function () {
            const ConfirmPass = $('#ConfirmPass').val();
            var confirmpass = document.getElementById("ConfirmPass").value;
            var pass = document.getElementById("Password").value;
            if (confirmpass == pass && pass != "") {
                state.isConfirmPasswordValid = true;
                updateState(state);
                document.getElementById("ConfirmPassError").innerHTML = "Password match";
                document.getElementById("ConfirmPassError").style.color = "#32CD32";
            }
            else {
                document.getElementById("ConfirmPassError").innerHTML = "Password does not match";
                document.getElementById("ConfirmPassError").style.color = "#FF0000";
                state.isPasswordValid = false;
                updateState(state);
            }
        });

        $('#ConfirmEmail').blur(function () {

            var ConfirmEmail = document.getElementById("ConfirmEmail").value;
            var email = document.getElementById("Email").value;
            if (ConfirmEmail == email && email != "") {
                state.isConfirmEmail = true;
                updateState(state);
                document.getElementById("ConfirmEmailError").innerHTML = "Email match";
                document.getElementById("ConfirmEmailError").style.color = "#32CD32";
            }
            else {
                document.getElementById("ConfirmEmailError").innerHTML = "Email does not match";
                document.getElementById("ConfirmEmailError").style.color = "#FF0000";
                state.isConfirmEmail = false;
                updateState(state);
            }
        });

        $('#Password').blur(function () {
            const password = $('#Password').val();
            if (validatePassword(password)) {
                state.isPasswordValid = true;
                updateState(state);
                document.getElementById("PasswordError").innerHTML = "Valid";
                document.getElementById("PasswordError").style.color = "#32CD32";
            }
            else {
                document.getElementById("PasswordError").style.color = "#FF0000";
                document.getElementById("PasswordError").innerHTML = "Invalid, it contains atleast 1 capital letter and 1 special and min 6 character ";
                state.isPasswordValid = false;
                updateState(state);
            }
        });

        const updateState = (state) => {
            if (state.isEmailValid && state.isPasswordValid && state.isConfirmPasswordValid && state.isConfirmEmail && state.isUserValid) {
                $("#CreateBtn").removeAttr("disabled");

            } else {
                $("#CreateBtn").attr("disabled", "disabled");

            }

        };

        $('#Email').blur(function () {

            const email = $('#Email').val();
            if (validateEmail(email)) {
                updateState(state);
                fetch(`/Account/IsEmailAvailable?email=${email}`, {
                    method: "GET",

                    credentials: 'same-origin',
                    headers: header
                }).then(res => {
                    const body = res.json().then(data => {
                        if (data) {
                            document.getElementById("EmailError").innerHTML = "Already Exists";
                            document.getElementById("EmailError").style.color = "#FF0000";
                            state.isEmailValid = false;
                            updateState(state);
                        }

                        else {

                            document.getElementById("EmailError").innerHTML = "Available";
                            document.getElementById("EmailError").style.color = "#32CD32";
                            state.isEmailValid = true;
                            updateState(state);
                            return;
                        }

                    });
                });

                return;
            }
            else {
                document.getElementById("EmailError").style.color = "#FF0000";
                document.getElementById("EmailError").innerHTML = "Insert a valid email address";
                state.isEmailValid = false;
                updateState(state);
                return;

            }

        });


        $('#UserName').blur(function () {

            const userName = $('#UserName').val();
            if (validateUserName(userName)) {
                updateState(state);
                fetch(`/Account/IsUserAvailable?user=${userName}`, {
                    method: "GET",

                    credentials: 'same-origin',
                    headers: header
                }).then(res => {
                    const body = res.json().then(data => {
                        if (data) {
                            document.getElementById("userNameMessage").innerHTML = "Already Exists";
                            document.getElementById("userNameMessage").style.color = "#FF0000";
                            state.isUserValid = false;
                            updateState(state);
                        }
                        else {

                            document.getElementById("userNameMessage").innerHTML = "Available";
                            document.getElementById("userNameMessage").style.color = "#32CD32";
                            state.isUserValid = true;
                            updateState(state);
                            return;
                        }

                    })
                });

                return;
            }
            else {
                document.getElementById("userNameMessage").style.color = "#FF0000";
                document.getElementById("userNameMessage").innerHTML = "Invalid, atleast 6 character";
                state.isUserValid = false;
                updateState(state);
                return;

            }

        });

    </script>
}