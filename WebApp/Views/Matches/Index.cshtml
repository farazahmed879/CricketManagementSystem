@model PaginatedList<WebApp.ViewModels.Matchdto>
@{
    ViewData["Title"] = "Matches";
}
<br />
<br />
<br />
<br />
<div class="container-fluid">
    <div class='col-md-1'></div>
    <div class="col-md-10">
        <div class="row">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a>Match</a></li>
            </ol>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="center fade-down section-heading">
                    <h2 class="main-title">Manage Matches</h2>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="form-group">
                <div id="filter-panel" style="border: 1px solid #bbb;" class="collapse filter-panel">
                    <div class="panel-body">
                        <form class="form-inline" role="form" id="Filters">
                            <div class="row">
                                <div class="col-xs-6 col-md-4">
                                    <label>Team</label>
                                    <select id="teamId" name="teamId" asp-items="ViewBag.TeamId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>

                                <div class="col-xs-6 col-md-4">
                                    <div class="form-group label-floating" style="width: 100%;">
                                        <label class="control-label">Overs</label>
                                        <select id="matchOvers" name="matchOvers" asp-items="ViewBag.Overs" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                            <option value="">--Select--</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-md-4">
                                    <label class="control-label">Season</label>
                                    <select id="season" name="season" asp-items="ViewBag.Season" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-xs-6 col-md-4">
                                    <label>Match Type</label>
                                    <select id="matchTypeId" name="matchTypeId" asp-items="ViewBag.MatchType" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>

                                <div class="col-xs-6 col-md-4">
                                    <label>Tournament</label>
                                    <select id="tournamentId" name="tournamentId" asp-items="ViewBag.Tournament" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>
                                <div class="col-xs-6 col-md-4">
                                    <label>Series</label>
                                    <select id="matchSeriesId" name="matchSeriesId" asp-items="ViewBag.MatchSeries" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>
                            </div>
                        </form>
                        <div class="footer" style="margin-top : .5em">
                            <ul class="list-inline">
                                <li><input id="clear" type="button" onclick="clearFilter()" value="Clear" class="btn btn-default"></li>
                                <li><input type="button" id="filterdata" value="Search" class="btn btn-outlined btn-primary filter-col"></li>
                            </ul>
                        </div>
                    </div>

                </div>

            </div>

            <ul class="list-inline">
                <li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="form-group">
                            <a asp-controller="Matches" class="btn btn-outlined btn-primary" asp-action="Create">Add</a>
                        </div>

                    }
                </li>
                <li>
                    <button id="advSearch" class="btn btn-default" data-toggle="collapse" data-target="#filter-panel">
                        Advanced Search
                    </button>
                </li>
                <li id="bteamId"></li>
                <li id="bmatchOvers"></li>
                <li id="bseason"></li>
                <li id="bmatchTypeId"></li>
                <li id="btournamentId"></li>
                <li id="bmatchSeriesId"></li>
            </ul>


            <div class="table-responsive">
                <table id="MatchTable" class="table table-bordered table-striped">
                    <thead style="background-color: maroon; color: white">
                        <tr>
                            <th>
                                Ground
                            </th>

                            <th>
                                First Inning
                            </th>
                            <th>
                                Second Inning
                            </th>
                            <th>
                                Summary
                            </th>
                            <th>
                                Type
                            </th>
                            <th>
                                Date
                            </th>

                            <th>
                                Ov
                            </th>

                            <th>
                                Result
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>
                    </thead>
                    @*<tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.GroundName)</b>
                                    </td>

                                    <td>

                                        @if (item.HasFilledHomeTeamData == true)
                                        {
                                            <b>@item.HomeTeam</b> <span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label  pull-right label-success"><i class="fas fa-check"></i></span>

                                        }
                                        else
                                        {
                                            <b>@item.HomeTeam</b> <span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>

                                        }


                                    </td>
                                    <td>

                                        @if (item.HasFilledOpponentTeamData == true)
                                        {
                                            <b>@item.OppponentTeam</b> <span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label pull-right label-success"><i class="fas fa-check"></i></span>

                                        }
                                        else
                                        {
                                            <b>@item.OppponentTeam</b><span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>

                                        }

                                    </td>
                                    <td>

                                        @if (item.HasFilledTeamScoreData == true)
                                        {
                                            <h1 data-placement="top" data-toggle="tooltip" title="Has Filled" class="label label-success">Read<i class="fas fa-check"></i></h1>

                                        }
                                        else

                                        {
                                            <h3 data-placement="top" data-toggle="tooltip" title="No Data" class="label label-warning">Pending<i class="fas fa-question"></i></h3>
                                        }


                                    </td>
                                    <td>
                                        <b> @Html.DisplayFor(modelItem => item.MatchType)</b>
                                    </td>
                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.DateOfMatch)</b>
                                    </td>
                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.MatchOvers)</b>
                                    </td>

                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.Result)</b>
                                    </td>

                                    <td>
                                        @if (User.Identity.IsAuthenticated)
                                        {

                                            <div class="btn-group">
                                                <button type="button" class="btn btn-outlined btn-primary dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a asp-controller="PlayerScores" asp-action="Index" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Score Card">Scorecard</a></li>
                                                    <li><a data-placement="top" data-toggle="tooltip" title="Details" asp-action="Details" asp-route-matchId="@item.MatchId">Details</a></li>

                                                    <li><a asp-controller="MatchSummary" asp-action="FirstInning" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Summary">Summary</a></li>
                                                </ul>
                                            </div>

                                            <a data-placement="top" data-toggle="tooltip" title="Edit Match" asp-action="Edit" asp-route-id="@item.MatchId"><i class="fas fa-edit"></i></a>
                                            <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(@item.MatchId)" class="fas fa-trash-alt"></i></a>

                                        }
                                        else
                                        {
                                            <a asp-controller="PlayerScores" asp-action="Index" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Score Card"></a>
                                            <a data-placement="top" data-toggle="tooltip" title="Details" asp-action="Details" asp-route-matchId="@item.MatchId"><i class="fas fa-info-circle"></i></a>
                                            <a asp-controller="MatchSummary" asp-action="FirstInning" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Summary"></a>

                                        }

                                    </td>
                                </tr>
                            }
                        </tbody>*@
                </table>
            </div>


        </div>
    </div>
    <div class='col-md-1'></div>

</div>

<div id="snackbar"></div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="MatchId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
    <input id="IsAuthenticated" hidden value="@Html.Raw(User.Identity.IsAuthenticated)" />
    <script>
        var IsAuthenticated = $("#IsAuthenticated").val() === "True";
        //Select2
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });

        $('[data-toggle="tooltip"]').tooltip();

        function GetURLParameter(sParam) {
            var sPageURL = window.location.search.substring(1);
            var sURLVariables = sPageURL.split('&');
            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] == sParam) {
                    return sParameterName[1];
                }
            }
        }

        var teamId = GetURLParameter('teamId');
        var matchTypeId = GetURLParameter('matchTypeId');
        var matchOvers = GetURLParameter('matchOvers');
        var season = GetURLParameter('season');
        var matchSeriesId = GetURLParameter('matchSeriesId');
        var tournamentId = GetURLParameter('TournamentId');
        document.getElementById("bteamId").innerHTML = teamId || "";
        document.getElementById("bmatchOvers").innerHTML = matchOvers || "";
        document.getElementById("bmatchTypeId").innerHTML = matchTypeId || "";
        document.getElementById("bseason").innerHTML = season || "";
        document.getElementById("bmatchSeriesId").innerHTML = matchSeriesId || "";
        document.getElementById("btournamentId").innerHTML = tournamentId || "";


        $(function () {
            $('#AddNewMatchBtn').click(function () {
                window.location = '/Matches/Create'
            });
        });


        var dataTable = $('#MatchTable').DataTable({
            processing: true,
            serverSide: true,
            "paging": true,
            dom: 'Brtipl',
            "order": [],
            ajax: {
                url: "/Matches/Index?" + $.param({
                    isApi: true,
                    tournamentId: tournamentId,
                    teamId: teamId
                }),
                type: "GET",
                dataType: "json"
            },
            columns: [
                {
                    className: "font-15 text-left",
                    orderable: false,
                    data: 'result',
                    name: 'result'
                },
                {

                    "render": function (data, type, row, meta) {
                        console.log(row);
                        return '<span>' + row.homeTeam + '</span><span>' +
                            (row.hasFilledHomeTeamData ? '<span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label  pull-right label-success"><i class="fas fa-check"></i></span>' :
                                '<span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>'
                            )
                    }
                },
                {
                    "render": function (data, type, row, meta) {
                        return '<span>' + row.oppponentTeam + '</span><span>' +
                            (row.hasFilledOpponentTeamData ? '<span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label  pull-right label-success"><i class="fas fa-check"></i></span>' :
                                '<span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>'
                            )
                    }
                }, {
                    "render": function (data, type, row, meta) {
                        return (row.hasFilledTeamScoreData ? '<span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label  pull-right label-success"><i class="fas fa-check"></i></span>' :
                            '<span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>'
                        )
                    }
                }
                , {
                    className: "font-13 text-left",
                    orderable: false,
                    data: 'matchType',
                    name: 'matchType'
                }
                , {
                    className: "font-13 text-left",
                    orderable: false,
                    data: 'dateOfMatch',
                    name: 'dateOfMatch'
                }, {
                    className: "font-13 text-left",
                    orderable: false,
                    data: 'matchOvers',
                    name: 'matchOvers'
                }, {
                    className: "font-13 text-left",
                    orderable: false,
                    data: 'result',
                    name: 'result'
                },
                {
                    "render": function (data, type, row, meta) {
                        return (IsAuthenticated ? ' <div class="btn-group">' +
                            '<button type="button" class="btn btn-outlined btn-primary dropdown-toggle" data-toggle="dropdown">' +
                            '<span class="caret"></span></button>' +
                            '<ul class="dropdown-menu">' +
                            '<li><a class="cursor" onclick="PlayerScores(' + row.homeTeamId + ',' + row.oppponentTeamId + ',' + row.matchId + ')" data-placement="top" data-toggle="tooltip" title="Score Card">Scorecard</a></li>' +
                            '<li><a class="cursor" onclick="MatchSummary(' + row.homeTeamId + ',' + row.oppponentTeamId + ',' + row.matchId + ')" data-placement="top" data-toggle="tooltip" title="Summary" onclick="Details(' + row.matchId + ')>Summary</a></li>' +
                            '<li><a  data-placement="top" data-toggle="tooltip" title="Summary">Summary</a></li></ul></div>' :
                            '<a class="cursor" onclick="PlayerScores(' + row.homeTeamId + ',' + row.oppponentTeamId + ',' + row.matchId + ')" data-placement="top" data-toggle="tooltip" title="Score Card"><i class="flaticon-cricket-18"></i></a>' +
                            '<a class="cursor" onclick="MatchSummary(' + row.homeTeamId + ',' + row.oppponentTeamId + ',' + row.matchId + ')" data-placement="top" data-toggle="tooltip" title="Summary"><i class="fas fa-baseball-ball"></i></a>') +
                            (IsAuthenticated ? ' <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Edit Match" asp-action="Edit" asp-route-id="data.MatchId"><i class="fas fa-edit"></i></a>' : "") +
                            (IsAuthenticated ? ' <a  data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(data.MatchId)" class="fas fa-trash-alt"></i></a>' : "");

                    }
                }
            ],
            buttons: [
                {
                    extend: 'pdfHtml5',
                    className: 'btn btn-default'
                    //orientation: 'landscape',
                    //pageSize: 'LEGAL'
                }
            ]
        });


        $('#filterdata').click(async function () {
            var teamId = $("#teamId").val();
            var matchTypeId = $("#matchTypeId").val();
            var tournamentId = $("#tournamentId").val();
            var matchOvers = $("#matchOvers").val();
            var season = $("#season").val();
            var matchSeriesId = $("#matchSeriesId").val();
            dataTable.ajax.url("/Matches/Index?teamId=" + teamId + "&matchTypeId=" + matchTypeId + "&tournamentId=" + tournamentId + "&matchSeriesId=" + matchSeriesId + "&season=" + season + "&matchOvers=" + matchOvers + "&isApi=true").load();
        });

        let PlayerScores = function (homeTeamId, oppponentTeamId, matchId) {
            window.location = "/PlayerScores/Index?homeTeamId=" + homeTeamId + "&oppTeamId=" + oppponentTeamId + "&matchId=" + matchId + "";
        }

        let MatchSummary = function (homeTeamId, oppponentTeamId, matchId) {
            window.location = "/MatchSummary/FirstInning?homeTeamId=" + homeTeamId + "&oppTeamId=" + oppponentTeamId + "&matchId=" + matchId + "";
        }
        let Details = function (id) {
            window.location = `/Matches/Details/${id}`
        }

        function Delete(MatchId) {
            document.getElementById("MatchId").value = MatchId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const matchId = document.getElementById('MatchId').value;
            const model = {
                matchId: Number(matchId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Matches/DeleteConfirmed/${matchId}`, {
                method: "Delete",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                var data = "Record is deleted successfully";
                window.location.reload();
                myFunction(data);
                return;
            } else {
                var data = "Record could not be deleted";
                myFunction(data);
            }
        };
        $("#tournamentId").attr("disabled", true);
        $("#matchSeriesId").attr("disabled", true);
        $("#matchTypeId").change(function () {
            if ($('#matchTypeId').val() === "2") {
                $("#matchSeriesId").val('').trigger('change');
                $("#tournamentId").attr("disabled", false);
                $("#matchSeriesId").attr("disabled", true);
            }
            else if ($('#matchTypeId').val() === "3") {
                $("#matchSeriesId").attr("disabled", false);
                $("#tournamentId").attr("disabled", true);
                $("#tournamentId").val('').trigger('change');
            }
            else if ($('#matchTypeId').val() === "1") {
                $("#tournamentId").attr("disabled", true);
                $("#matchSeriesId").attr("disabled", true);
                $("#tournamentId").val('').trigger('change');
                $("#matchSeriesId").val('').trigger('change');
            }
        });

        function clearFilter() {
            $("#teamId").val('').trigger('change');
            $("#matchOvers").val('').trigger('change');
            $("#matchTypeId").val('').trigger('change');
            $("#homeTeamId").val('').trigger('change');
            $("#season").val('').trigger('change');
            $("#overs").val('').trigger('change');
            $("#matchSeriesId").val('').trigger('change');
            $("#tournamentId").val('').trigger('change');
        }

        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }

    </script>
    <style>
        @@media only screen and (max-width: 768px) {
            /* For mobile phones: */
            .material-icons.md-14 {
                font-size: 14px;
            }

            body {
                font-size: 1em;
            }
        }


        /*td {
            text-align: center !important;
        }*/

        th {
            text-align: center !important;
        }
    </style>
}
@*'<a data-placement="top" data-toggle="tooltip" title="Details" onclick="Details(' + row.matchId + ')>Details</a>' +*@