@model PaginatedList<WebApp.ViewModels.Matchdto>
@{
    ViewData["Title"] = "Matches";
}
<br />
<br />
<br />
<br />
<div class="container-fluid">
    <ol class="breadcrumb">
        <li><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li><a>Match</a></li>
    </ol>
</div>
<div class="container-fluid">
    <div class="form-group">
        <div id="filter-panel" style="border: 1px solid #bbb;" class="collapse filter-panel">
            <div class="panel-body">
                <form class="form-inline" role="form" id="Filters">
                    <div class="row">
                        <div class="col-xs-6 col-md-4">
                            <label>Team</label>
                            <select id="teamId" name="teamId" asp-items="ViewBag.TeamId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                <option value="">--Select--</option>
                            </select>
                        </div>

                        <div class="col-xs-6 col-md-4">
                            <div class="form-group label-floating" style="width: 100%;">
                                <label class="control-label">Overs</label>
                                <select id="matchOvers" name="matchOvers" asp-items="ViewBag.Overs" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                    <option value="">--Select--</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-xs-6 col-md-4">
                            <label class="control-label">Season</label>
                            <select id="season" name="season" asp-items="ViewBag.Season" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-xs-6 col-md-4">
                            <label>Match Type</label>
                            <select id="matchTypeId" name="matchTypeId" asp-items="ViewBag.MatchType" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                <option value="">--Select--</option>
                            </select>
                        </div>

                        <div class="col-xs-6 col-md-4">
                            <label>Tournament</label>
                            <select id="tournamentId" name="tournamentId" asp-items="ViewBag.Tournament" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                        <div class="col-xs-6 col-md-4">
                            <label>Series</label>
                            <select id="matchSeriesId" name="matchSeriesId" asp-items="ViewBag.MatchSeries" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                <option value="">--Select--</option>
                            </select>
                        </div>
                    </div>
                </form>
                <div class="footer" style="margin-top : .5em">
                    <ul class="list-inline">
                        <li><input id="clear" type="button" onclick="clearFilter()" value="Clear" class="btn btn-default"></li>
                        <li><input type="button" id="filterdata" value="Search" class="btn btn-primary filter-col"></li>
                    </ul>
                </div>
            </div>

        </div>

    </div>
    <ul class="list-inline">
        <li>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="form-group">
                    <a asp-controller="Matches" class="btn btn-primary" asp-action="Create">Add</a>
                </div>

            }
        </li>
        <li>
            <button id="advSearch" class="btn btn-box-tool" data-toggle="collapse" data-target="#filter-panel">
                Advanced Search
            </button>
        </li>
        <li id="bteamId"></li>
        <li id="bmatchOvers"></li>
        <li id="bseason"></li>
        <li id="bmatchTypeId"></li>
        <li id="btournamentId"></li>
        <li id="bmatchSeriesId"></li>
    </ul>


    <div class="table-responsive">
        <table id="MatchTable" class="table table-bordered table-striped">
            <thead class="bg-blue-active">
                <tr>
                    <th>
                        Ground
                    </th>

                    <th>
                        First Inning
                    </th>
                    <th>
                        Second Inning
                    </th>
                    <th>
                        Summary
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        Date
                    </th>

                    <th>
                        Ov
                    </th>

                    <th>
                        Result
                    </th>
                    <th>
                        Actions
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.GroundName)
                        </td>

                        <td>

                            @if (item.HasFilledHomeTeamData == true)
                            {
                                @item.HomeTeam<span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label  pull-right label-success"><i class="fas fa-check"></i></span>

                            }
                            else
                            {
                                @item.HomeTeam <span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>

                            }
                            @*@item.HomeTeam.Team_Name <span class="label pull-right label-warning"><i class="fas fa-question"></i></span>*@

                        </td>
                        <td>

                            @if (item.HasFilledOpponentTeamData == true)
                            {
                                @item.OppponentTeam <span data-placement="top" data-toggle="tooltip" title="Has Filled" class="label pull-right label-success"><i class="fas fa-check"></i></span>

                            }
                            else
                            {
                                @item.OppponentTeam<span data-placement="top" data-toggle="tooltip" title="No Data" class="label pull-right label-warning"><i class="fas fa-question"></i></span>

                            }

                        </td>
                        <td>

                            @if (item.HasFilledTeamScoreData == true)
                            {
                                <h1 data-placement="top" data-toggle="tooltip" title="Has Filled" class="label label-success">Read<i class="fas fa-check"></i></h1>

                            }
                            else

                            {
                                <h3 data-placement="top" data-toggle="tooltip" title="No Data" class="label label-warning">Pending<i class="fas fa-question"></i></h3>
                            }


                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MatchType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfMatch)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MatchOvers)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Result)
                        </td>

                        <td>
                            @if (User.Identity.IsAuthenticated)
                            {


                                <a asp-controller="PlayerScores" asp-action="Index" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Score Card"><i class="flaticon-cricket-18"></i></a>
                                <a data-placement="top" data-toggle="tooltip" title="Edit Match" asp-action="Edit" asp-route-id="@item.MatchId"><i class="fas fa-edit"></i></a>
                                <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(@item.MatchId)" class="fas fa-trash-alt"></i></a>
                                <a data-placement="top" data-toggle="tooltip" title="Details" asp-action="Details" asp-route-matchId="@item.MatchId"><i class="fas fa-info-circle"></i></a>
                                <a asp-action="Summary" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Match Summary"><i class="fas fa-baseball-ball"></i></a>

                            }
                            else
                            {
                                <a asp-controller="PlayerScores" asp-action="Index" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Score Card"><i class="flaticon-cricket-18"></i></a>
                                <a asp-action="Summary" asp-route-oppTeamId="@item.OppponentTeamId" asp-route-homeTeamId="@item.HomeTeamId" asp-route-matchId="@item.MatchId" data-placement="top" data-toggle="tooltip" title="Match Summary"><i class="fas fa-baseball-ball"></i></a>
                                <a data-placement="top" data-toggle="tooltip" title="Details" asp-action="Details" asp-route-matchId="@item.MatchId"><i class="fas fa-info-circle"></i></a>
                            }

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var prev1Disabled = !Model.HasPreviousPage ? "hide" : "";
        var prev2Disabled = !Model.HasPreviousTwo ? "hide" : "";
        var prev3Disabled = !Model.HasPreviousThree ? "hide" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        var next1Disabled = !Model.HasNextPage ? "hide" : "";
        var next2Disabled = !Model.HasNext2 ? "hide" : "";
        var next3Disabled = !Model.HasNext3 ? "hide" : "";
    }
    <nav class="navbar navbar-light bg-light">
        <div class="col-md-12">
            <span class="fa-1x">
                <strong class="text-primary">Showing @Model.PageStartValue to @Model.PageEndValue of @Model.TotalCount entries</strong>
            </span>
            <span class="fa-1x pull-right">
                <strong class="text-primary">Page # @Model.PageIndex of @Model.TotalPages pages</strong>
            </span>
        </div>
        <form class="form-inline pull-right">
            <div class="row pull-right">
                <a data-placement="top" data-toggle="tooltip" title="First Page" asp-action="Index" class="btn btn-primary @prevDisabled"
                   asp-route-page="@(1)">
                    First
                </a>

                <a asp-action="Index" class="btn btn-default @prev3Disabled"
                   asp-route-page="@(Model.PageIndex - 3)">@(Model.PageIndex - 3)</a>
                <a asp-action="Index" class="btn btn-default @prev2Disabled"
                   asp-route-page="@(Model.PageIndex - 2)">@(Model.PageIndex - 2)</a>
                <a asp-action="Index" class="btn btn-default @prev1Disabled"
                   asp-route-page="@(Model.PageIndex - 1)">@(Model.PageIndex - 1)</a>

                <a asp-action="Index" class="btn btn-primary disabled"
                   asp-route-page="@(Model.PageIndex)">@(Model.PageIndex)</a>

                <a asp-action="Index" class="btn btn-default @next1Disabled"
                   asp-route-page="@(Model.PageIndex + 1)">@(Model.PageIndex + 1)</a>
                <a asp-action="Index" class="btn btn-default @next2Disabled"
                   asp-route-page="@(Model.PageIndex + 2)">@(Model.PageIndex + 2)</a>
                <a asp-action="Index" class="btn btn-default @next3Disabled"
                   asp-route-page="@(Model.PageIndex + 3)">@(Model.PageIndex + 3)</a>

                <a data-placement="top" data-toggle="tooltip" title="Last Page" asp-action="Index"
                   asp-route-page="@(Model.TotalPages)"
                   class="btn btn-primary @nextDisabled">
                    Last
                </a>

            </div>
        </form>
    </nav>
</div>
<div id="snackbar"></div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="MatchId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <script>
        //Select2
        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });

        $('[data-toggle="tooltip"]').tooltip();

        function GetURLParameter(sParam) {
            var sPageURL = window.location.search.substring(1);
            var sURLVariables = sPageURL.split('&');
            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] == sParam) {
                    return sParameterName[1];
                }
            }
        }

        var teamId = GetURLParameter('teamId');
        var matchTypeId = GetURLParameter('matchTypeId');
        var matchOvers = GetURLParameter('matchOvers');
        var season = GetURLParameter('season');
        var matchSeriesId = GetURLParameter('matchSeriesId');
        var tournamentId = GetURLParameter('tournamentId');
        document.getElementById("bteamId").innerHTML = teamId || "";
        document.getElementById("bmatchOvers").innerHTML = matchOvers || "";
        document.getElementById("bmatchTypeId").innerHTML = matchTypeId || "";
        document.getElementById("bseason").innerHTML = season || "";
        document.getElementById("bmatchSeriesId").innerHTML = matchSeriesId || "";
        document.getElementById("btournamentId").innerHTML = tournamentId || "";


        $(function () {
            $('#AddNewMatchBtn').click(function () {
                window.location = '/Matches/Create'
            });
        });

        $(document).ready(function () {
            $('#MatchTable').DataTable({
                "paging": false,
                dom: 'Bfrt',
                "order": [],
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        className: 'btn btn-primary'
                        //orientation: 'landscape',
                        //pageSize: 'LEGAL'
                    }
                ]
            });
        });

        $('#filterdata').click(async function () {
            window.location = `/Matches/Index?teamId=${$("#teamId").val()}&matchTypeId=${$("#matchTypeId").val()}&tournamentId=${$("#tournamentId").val()}&matchOvers=${$("#matchOvers").val()}&season=${$("#season").val()}&matchSeriesId=${$("#matchSeriesId").val()}`;
        });


        function Delete(MatchId) {
            document.getElementById("MatchId").value = MatchId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const matchId = document.getElementById('MatchId').value;
            const model = {
                matchId: Number(matchId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Matches/DeleteConfirmed?matchId=${matchId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                var data = "Record is deleted successfully";
                window.location.reload();
                myFunction(data);
                return;
            } else {
                var data = "Record could not be deleted";
                myFunction(data);
            }
        };
        $("#tournamentId").attr("disabled", true);
        $("#matchSeriesId").attr("disabled", true);
        $("#matchTypeId").change(function () {
            if ($('#matchTypeId').val() === "2") {
                $("#matchSeriesId").val('').trigger('change');
                $("#tournamentId").attr("disabled", false);
                $("#matchSeriesId").attr("disabled", true);
            }
            else if ($('#matchTypeId').val() === "3") {
                $("#matchSeriesId").attr("disabled", false);
                $("#tournamentId").attr("disabled", true);
                $("#tournamentId").val('').trigger('change');
            }
            else if ($('#matchTypeId').val() === "1") {
                $("#tournamentId").attr("disabled", true);
                $("#matchSeriesId").attr("disabled", true);
                $("#tournamentId").val('').trigger('change');
                $("#matchSeriesId").val('').trigger('change');
            }
        });

        function clearFilter() {
            $("#teamId").val('').trigger('change');
            $("#matchOvers").val('').trigger('change');
            $("#matchTypeId").val('').trigger('change');
            $("#homeTeamId").val('').trigger('change');
            $("#season").val('').trigger('change');
            $("#overs").val('').trigger('change');
            $("#matchSeriesId").val('').trigger('change');
            $("#tournamentId").val('').trigger('change');
        }

        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }

    </script>
    <style>
        @@media only screen and (max-width: 768px) {
            /* For mobile phones: */
            .material-icons.md-14 {
                font-size: 14px;
            }

            body {
                font-size: 1em;
            }
        }


        /*td {
            text-align: center !important;
        }*/

        th {
            text-align: center !important;
        }
    </style>
}
