@model PaginatedList<WebApp.ViewModels.Playersdto>

@{
    ViewData["Title"] = "Players";
}
<br />
<br />
<br />
<br />
<input type="hidden" id="hdnAuthenticated" value="@Html.Raw(User.Identity.IsAuthenticated)" />
<div class="container-fluid">
    <div class='col-md-1'></div>
    <div class="col-md-10">
        <div class="row">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a>Players</a></li>
            </ol>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="center fade-down section-heading">
                        <h2 class="main-title">Manage Player</h2>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div id="filter-panel" class="collapse filter-panel">
                    <div class="panel-body">
                        <form class="form-inline" role="form" id="Filters">
                            <div class="row">
                                <div class="col-xs-6 col-md-3">
                                    <label>Team</label>
                                    <select id="teamId" name="teamId" asp-items="ViewBag.TeamId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>


                                <div class=" col-xs-6 col-md-3">
                                    <label>Role</label>
                                    <select id="playerRoleId" asp-items="ViewBag.PlayerRoleId" name="playerRoleId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>

                                <div class=" col-xs-6 col-md-3">
                                    <label>Batting Style</label>
                                    <select id="battingStyleId" asp-items="ViewBag.BattingStyleId" name="battingStyleId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>

                                <div class="col-xs-6 col-md-3">
                                    <label>Bowling Style</label>
                                    <select id="bowlingStyleId" asp-items="ViewBag.BowlingStyleId" name="bowlingStyleId" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>
                                <div class="col-xs-6 col-md-3" style="margin-top: 20px">

                                    <label class="control-label">Player</label>
                                    <input name="name" id="name" placeholder="John" class="form-control" />
                                </div>
                            </div>
                            <br />
                            <div class="footer" style="margin-top : .5em">
                                <ul class="list-inline">
                                    <li><input id="Clear" type="button" value="Clear" class="btn btn-default"></li>
                                    <li><input type="button" id="filterdata" value="Search" class="btn btn-outlined btn-primary filter-col"></li>
                                </ul>
                            </div>
                        </form>
                    </div>

                </div>
            </div>
            <ul class="list-inline">
                <li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="form-group">
                            <a asp-controller="Players" data-placement="top" data-toggle="tooltip" title="Add new player" class="btn btn-outlined btn-primary" asp-action="Create">Add</a>
                        </div>

                    }
                </li>
                <li>
                    <button id="advSearch" class="btn btn-default" data-toggle="collapse" data-target="#filter-panel">
                        Advanced Search
                    </button>
                </li>
            </ul>



            <div class="table-responsive">

                <table id="PlayerTable" class="table table-bordered table-striped">
                    <thead style="background-color: maroon; color: white">
                        <tr>
                            <th>
                                Player Name
                            </th>
                            <th>
                                Birth
                            </th>
                            <th>
                                Team
                            </th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    @*<tbody id="myTable">
                            @foreach (var item in Model)
                            {

                                <tr>
                                    <td>
                                        <ul class="list-inline">
                                            <li><img class="img-responsive" id="Img" src="~/Home/images/Players/@item.FileName"></li>
                                            <li><b>@item.Player_Name</b></li>
                                        </ul>
                                    </td>
                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.DOB)</b>
                                    </td>
                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.Team)</b>
                                    </td>
                                    <td>
                                        @if (User.Identity.IsAuthenticated)
                                        {

                                            <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" onclick="statistics(@item.PlayerId)" title="Statistics">
                                                <i data-toggle="modal" data-target="#playerStatistics" class="fas fa-user"></i>
                                            </a>
                                            <a data-toggle="tooltip" title="Edit Mode" asp-action="Edit" asp-route-id="@item.PlayerId"><i class="fas fa-edit"></i></a>
                                            <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" class="fas fa-trash-alt" onclick="Delete(@item.PlayerId)"></i></a>
                                            <a data-placement="top" data-toggle="tooltip" title="Past Record" asp-route-PlayerName="@item.Player_Name" asp-controller="PlayerPastRecord" asp-action="PastRecord" asp-route-playerId="@item.PlayerId"><i class="fa fa-certificate"></i></a>

                                        }
                                        else
                                        {

                                            <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" onclick="statistics(@item.PlayerId)" title="Statistics">
                                                <i data-toggle="modal" data-target="#playerStatistics" class="fas fa-user"></i>
                                            </a>
                                        }


                                    </td>
                                </tr>
                            }
                        </tbody>*@
                </table>
                @*@{
                        await Html.RenderPartialAsync("_PlayerPartial", Model);
                    }*@
            </div>


        </div>
    </div>
    <div class='col-md-1'></div>

</div>

<div id="snackbar"></div>
<div id="playerStatistics" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div hidden id="pId"></div>
            <div class="modal-body" style="border: solid">
                <div id="screen">
                    <center>
                    </center>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-3">
                                <div class="widget-user-image">
                                    <img class="img-circle" id="target">
                                </div>
                                <div class="overlay">
                                    <a class="preview btn btn-outlined btn-primary" id="prettyPhoto" href="~/Home/images/Players/Ahmed Raza.jpg" rel="prettyPhoto"><i class="fa fa-eye"></i></a>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <ul>
                                    <li> <b id="playerName"></b></li>
                                    <li> <span class="description-header">Playing Role</span> <b id="playingRole"></b></li>
                                    <li> <span class="description-header">Batting Style</span> <b id="battingStyle"></b></li>
                                    <li> <span class="description-header">Bowling Style</span> <b id="bowlingStyle"></b></li>
                                    <li> <span class="description-header">Birth</span> <b id="age"></b></li>
                                    <li> <b id="teamName"></b></li>
                                </ul>
                            </div>
                            <div class="col-md-3">
                                <div class="col-xs-12 col-md-12">
                                    <label class="control-label">Season</label>
                                    <select id="season" name="season" asp-items="ViewBag.Season" placeholder="--Select--" style="width: 100%" class="js-example-basic-single">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>
                                <div class="col-xs-12 col-md-12">
                                    <label>Match Type</label>
                                    <select id="matchTypeId" name="matchTypeId" asp-items="ViewBag.MatchType" style="width:100%" class="js-example-basic-single" placeholder="--Select--">
                                        <option value="">--Select--</option>
                                    </select>
                                </div>
                                <div class="col-xs-12 col-md-12">
                                    <a data-placement="top" style="cursor:pointer;" onclick="statistics(null)" data-toggle="tooltip">Apply</a>
                                </div>
                            </div>
                        </div>
                    </div>



                    <!-- /.widget-user -->
                    <div style="background-color: maroon; color:white">
                        <h4>Batting<a data-placement="top" style="cursor: pointer" data-toggle="modal" data-target="#BattingModal"><i title="More" data-toggle="tooltip" class="fa fa-arrow-circle-down"></i></a></h4>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>M</th>
                                            <th>In</th>
                                            <th>R</th>
                                            <th>B</th>
                                            <th>50</th>
                                            <th>100</th>
                                            <th>Avg</th>
                                            <th>SR</th>
                                            <th>Hs</th>
                                            <th>4s</th>
                                            <th>6s</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr>
                                            <td><b id="totalMatch"></b></td>
                                            <td><b id="totalInnings"></b></td>
                                            <td><b id="totalBatRuns"></b></td>
                                            <td><b id="totalBatBalls"></b></td>
                                            <td><b id="numberOf50s"></b></td>
                                            <td><b id="numberOf100s"></b></td>
                                            <td><b id="battingAverage"></b></td>
                                            <td><b id="strikeRate"></b></td>
                                            <td><b id="bestScore"></b></td>
                                            <td><b id="totalFours"></b></td>
                                            <td><b id="totalSixes"></b></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div style="background-color: maroon; color:white">
                        <h4>Bowling<a data-placement="top" style="cursor: pointer" data-toggle="modal" data-target="#BowlingModal"><i title="More" data-toggle="tooltip" class="fa fa-arrow-circle-down"></i></a></h4>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>O</th>
                                            <th>W</th>
                                            <th>R</th>
                                            <th>5w</th>
                                            <th>M</th>
                                            <th>Avg</th>
                                            <th>Eco</th>
                                            <th>BBI</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><b id="totalOvers"></b></td>
                                            <td><b id="totalWickets"></b></td>
                                            <td><b id="totalBallRuns"></b></td>
                                            <td><b id="fiveWickets"></b></td>
                                            <td><b id="totalMaidens"></b></td>
                                            <td><b id="bowlingAvg"></b></td>
                                            <td><b id="economy"></b></td>
                                            <td><b id="bestBowling"></b></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div style="background-color: maroon; color:white">
                        <h4>Fielding</h4>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Catches</th>
                                            <th>Stumps</th>
                                            <th>Run Out</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><b id="onFieldCatch"></b></td>
                                            <td><b id="onFieldStump"></b></td>
                                            <td><b id="onFieldRunOut"></b></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <button data-toggle="modal" data-target="#screenShot" class="btn btn-primary" data-dismiss="modal" id="Capture"><i class="fa fa-camera"></i></button>
                <button type="button" class="close" id="close" data-dismiss="modal">&times;</button>
            </div>

        </div>
    </div>
</div>
<div id="screenShot" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            @*<div class="modal-header  bg-light-blue-active">
                    <button type="button" class="close" onclick="ogShare()" data-dismiss="modal">&times;</button>
                </div>*@
            <div class="modal-body">
                <div class="container-canvas">
                    <div id="screenShotBody"></div>
                </div>
            </div>

        </div>
    </div>
</div>
<div id="BattingModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header  bg-light-blue-active">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Batting</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>
                        Bowled
                    </dt>
                    <dd>
                        <span id="getBowled"></span>
                    </dd>
                    <dt>
                        Catch
                    </dt>
                    <dd>
                        <span id="getCatch"></span>
                    </dd>
                    <dt>
                        Hit Wicket
                    </dt>
                    <dd>
                        <span id="getHitWicket"></span>
                    </dd>
                    <dt>
                        Lbw
                    </dt>
                    <dd>
                        <span id="getLBW"></span>
                    </dd>
                    <dt>
                        Stump
                    </dt>
                    <dd>
                        <span id="getStump"></span>
                    </dd>
                    <dt>
                        Run Out
                    </dt>
                    <dd>
                        <span id="getRunOut"></span>
                    </dd>
                    <dt>
                        Not Out
                    </dt>
                    <dd>
                        <span id="totalNotOut"></span>
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>
<div id="BowlingModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header  bg-light-blue-active">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Bowling</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>
                        Bowled
                    </dt>
                    <dd>
                        <span id="doBowled"></span>
                    </dd>
                    <dt>
                        Catch
                    </dt>
                    <dd>
                        <span id="doCatch"></span>
                    </dd>
                    <dt>
                        Hit Wicket
                    </dt>
                    <dd>
                        <span id="doHitWicket"></span>
                    </dd>
                    <dt>
                        Lbw
                    </dt>
                    <dd>
                        <span id="doLBW"></span>
                    </dd>
                    <dt>
                        Stump
                    </dt>
                    <dd>
                        <span id="doStump"></span>
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="PlayerId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Home/js/html2convas-min.js"></script>
    <script>

        $('.js-example-basic-single').select2();

        var dataTable = $('#PlayerTable').DataTable({
            processing: true,
            serverSide: true,
            "paging": true,
            dom: 'Brtipl',
            "order": [],
            ajax: {
                url: "/Players/Index?isApi=true",
                type: "GET",
                dataType: "json"
            },
            columns: [
                {
                    className: "font-15 text-left",
                    orderable: false,
                    data: 'player_Name',
                    name: 'player_Name'
                },
                {
                    className: "font-15 text-left",
                    orderable: false,
                    data: 'dob',
                    name: 'dob'
                },
                {
                    className: "font-15 text-left",
                    orderable: false,
                    data: 'team',
                    name: 'team'
                },
                {
                    "render": function (data, type, row, meta) {
                        return '<a data-placement="top" data-toggle="tooltip" style="cursor:pointer" onclick="statistics(data.PlayerId)" title="Statistics">' +
                            '<i data-toggle="modal" data-target="#playerStatistics" class="fas fa-user"></i></a>' +
                            ' <a data-toggle="tooltip" title="Edit Mode" style="cursor:pointer" asp-action="Edit" asp-route-id=" +data.PlayerId + "><i class="fas fa-edit"></i></a>' +
                        ' <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" class="fas fa-trash-alt" onclick="Delete(data.PlayerId)"></i></a>'+
                        ' <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Past Record" asp-route-PlayerName="+ data.Player_Name + " asp-controller="PlayerPastRecord" asp-action="PastRecord" asp-route-playerId=" + data.PlayerId + "><i class="fa fa-certificate"></i></a>';
                    }
                },

            ],
            buttons: [
                {
                    extend: 'pdfHtml5',
                    className: 'btn btn-default'
                    //orientation: 'landscape',
                    //pageSize: 'LEGAL'
                }
            ]
        });

        //Toaster
        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }

        $('#AddBtn').click(function () {
            window.location = '/Players/Create'
        });

        $('#Capture').click(function () {
            document.getElementById("screenShotBody").innerHTML = "";
            html2canvas(document.querySelector("#screen")).then(canvas => {
                document.getElementById("screenShotBody").appendChild(canvas);
            });
            // ogShare();
        });
        $('#close').click(function () {

            document.getElementById("screenShotBody").innerHTML = "";
        });



        $('#filterdata').click(async function () {

            var teamId = $("#teamId").val();
            var playerRoleId = $("#playerRoleId").val();
            var battingStyleId = $("#battingStyleId").val();
            var bowlingStyleId = $("#bowlingStyleId").val();
            var name = $("#name").val();
            dataTable.ajax.url("/Players/Index?teamId=" + teamId + "&playerRoleId=" + playerRoleId + "&battingStyleId=" + battingStyleId + " & bowlingStyleId=" + bowlingStyleId + " & name=" + name + " & isApi=true");
            //const getA = (i) => {
            //    if ($("#hdnAuthenticated").val() === "True") {
            //        return `<a data-placement="top" data-toggle="tooltip" style="cursor:pointer" onclick="statistics(${i.playerId})" title="Statistics">
            //                                                                            <i data-toggle="modal" data-target="#playerStatistics" class="fas fa-user"></i>
            //                                                                        </a>`;
            //    }
            //    return "";
            //}
            //const response = await fetch(`/Players/Index?teamId=${$("#teamId").val()}&playerRoleId=${$("#playerRoleId").val()}&battingStyleId=${$("#battingStyleId").val()}&bowlingStyleId=${$("#bowlingStyleId").val()}&name=${$("#name").val()}&isApi=true`, {
            //    method: "Get",
            //    //     body: JSON.stringify(model),
            //    credentials: 'same-origin'
            //});
            //if (response.ok) {

            //    const json = Array.from(await response.json());
            //    console.log(json);
            //    const tbody = document.getElementsByTagName('TBODY')[0];
            //    tbody.innerHTML = '';
            //    const trRows = json.map(i => {
            //        const tr = document.createElement("tr");
            //        tr.innerHTML = `
            //                                                                        <td> <ul class="list-inline">
            //                                                                            <li><img class="img-responsive" id="Img" src="/Home/images/Players/${i.fileName}"></li>
            //                                                                            <li><b>${i.player_Name}</b></li>
            //                                                                        </ul></td>
            //                                                                        <td><b>${i.dob}</b></td>
            //                                                                        <td><b>${i.team}</b></td>
            //                                                                        <td id="tabletd">
            //                                                                        ${getA(i)}

            //                                                                         </td>`;
            //        tbody.appendChild(tr);

            //        // const login = document.createElement("td")
            //        var html = `  `


            //        //$('#tabletd').appendTo(html);
            //        return tr;
            //    });

            document.getElementById('advSearch').click();
            clearFilter();

        });


        $("#deleteBtn")
            .off()
            .on("click", async () => {
                const playerId = document.getElementById('PlayerId').value;
                const model = {
                    playerId: Number(playerId),
                };
                var header = new Headers();
                header.append("content-type", "application/json");

                const response = await fetch(`/Players/DeleteConfirmed/${playerId}`, {
                    method: "Delete",
                    body: JSON.stringify(model),
                    credentials: 'same-origin',
                    headers: header
                });

                if (response.ok) {
                    var data = "Record is deleted successfully";
                    window.location.reload();
                    myFunction(data);

                    return;
                } else {
                    var data = "Record could not be deleted";
                    myFunction(data);
                }
            });

        function ogShare() {
            var canvas = document.querySelector('#screenShotBody > canvas');
            var dataURI = canvas.toDataURL();
            var imgdata = dataURI.match(/data:(image\/.+);base64,(.+)/);

            //var date = document.getElementById("matchDate").innerText;
            //var mydate = new Date(date);
            //var month = ["January", "February", "March", "April", "May", "June",
            //    "July", "August", "September", "October", "November", "December"][mydate.getMonth()];
            //var day = mydate.getDate();
            //var fileName = day + month + '' + mydate.getFullYear();

            var fileName = "PLayerName";


            console.log(fileName);

            $.ajax({
                url: "/Matches/ScreenShot?",
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify({
                    baseUrl: imgdata[2],
                    fileName: fileName
                }),
                success: function (url) {
                    console.log(url);
                    fb(url)
                },
                fail: function () {
                }
            })

        }

        // Initialize the Facebook JS SDK.
        window.fbAsyncInit = function () {
            FB.init({
                appId: '821635978177081',
                autoLogAppEvents: true,
                xfbml: true,
                version: 'v3.1'
            });

            // Put additional init code here
        };

        function fb(url) {
            FB.ui({
                method: 'share_open_graph',
                action_type: 'og.likes',
                //  picture: image.src,
                action_properties: JSON.stringify({
                    object: url
                })
            }, function (response) {
                // Debug response (optional)
                console.log(response);
            });
        }

        let statistics = function (playerId) {
            alert(playerId);
            var season = 0;
            var matchTypeId = 0;
            if (playerId == null || playerId == undefined || playerId == 0) {
                season = $('#season').val();
                matchTypeId = $('#matchTypeId').val();
                playerId = $('#pId').text();
            }


            var header = new Headers();
            header.append("content-type", "application/json");

            fetch(`/Players/PlayerStatistics/PlayerId/${playerId}/Season/${season}/MatchTypeId/${matchTypeId}`, {
                credentials: 'same-origin',
                headers: header
            })
                .then(response => {
                    if (response.ok) {
                        response.json()
                            .then(json => {
                                console.log(json);
                                document.getElementById("playerName").innerHTML = json.playerName;
                                document.getElementById("teamName").innerHTML = json.teamName;

                                document.getElementById("battingStyle").innerHTML = json.battingStyle;
                                document.getElementById("playingRole").innerHTML = json.playerRole;
                                document.getElementById("bowlingStyle").innerHTML = json.bowlingStyle;

                                var today = new Date();
                                var DOB = new Date(json.dob);
                                var totalMonths = (today.getFullYear() - DOB.getFullYear()) * 12 + today.getMonth() - DOB.getMonth();
                                totalMonths += today.getDay() < DOB.getDay() ? -1 : 0;
                                var years = today.getFullYear() - DOB.getFullYear();
                                if (DOB.getMonth() > today.getMonth())
                                    years = years - 1;
                                else if (DOB.getMonth() === today.getMonth())
                                    if (DOB.getDate() > today.getDate())
                                        years = years - 1;

                                var days;
                                var months;

                                if (DOB.getDate() > today.getDate()) {
                                    months = (totalMonths % 12);
                                    if (months == 0)
                                        months = 11;
                                    var x = today.getMonth();
                                    switch (x) {
                                        case 1:
                                        case 3:
                                        case 5:
                                        case 7:
                                        case 8:
                                        case 10:
                                        case 12:
                                            {
                                                var a = DOB.getDate() - today.getDate();
                                                days = 31 - a;
                                                break;
                                            }
                                        default: {
                                            var a = DOB.getDate() - today.getDate();
                                            days = 30 - a;
                                            break;
                                        }

                                    }

                                }
                                else {
                                    days = today.getDate() - DOB.getDate();
                                    if (DOB.getMonth() === today.getMonth())
                                        months = (totalMonths % 12);
                                    else
                                        months = (totalMonths % 12) + 1;
                                }

                                document.getElementById("age").innerHTML = years + ' years ' + months + ' months ' + days + ' days';

                                //batting
                                document.getElementById("totalMatch").innerHTML = json.totalMatch;
                                document.getElementById("totalInnings").innerHTML = json.totalInnings;
                                document.getElementById("totalBatRuns").innerHTML = json.totalBatRuns;
                                document.getElementById("totalBatBalls").innerHTML = json.totalBatBalls;
                                document.getElementById("numberOf50s").innerHTML = json.numberOf50s;
                                document.getElementById("numberOf100s").innerHTML = json.numberOf100s;
                                document.getElementById("battingAverage").innerHTML = json.battingAverage || 'N/A';
                                document.getElementById("strikeRate").innerHTML = json.strikeRate || 'N/A';
                                document.getElementById("bestScore").innerHTML = json.hightScore;
                                document.getElementById("totalFours").innerHTML = json.totalFours;
                                document.getElementById("totalSixes").innerHTML = json.totalSixes;

                                //Bowling
                                document.getElementById("totalOvers").innerHTML = json.totalOvers;
                                document.getElementById("totalWickets").innerHTML = json.totalWickets;
                                document.getElementById("totalBallRuns").innerHTML = json.totalBallRuns;
                                document.getElementById("fiveWickets").innerHTML = json.fiveWickets;
                                document.getElementById("totalMaidens").innerHTML = json.totalMaidens;
                                document.getElementById("bowlingAvg").innerHTML = json.bowlingAvg || 'N/A';
                                document.getElementById("economy").innerHTML = json.economy || 'N/A';
                                document.getElementById("bestBowling").innerHTML = json.bestBowlingFigureRuns + '/' + json.mostWickets || 'N/A';

                                //Fielding
                                document.getElementById("onFieldCatch").innerHTML = json.onFieldCatch;
                                document.getElementById("onFieldStump").innerHTML = json.onFieldStump;
                                document.getElementById("onFieldRunOut").innerHTML = json.onFieldRunOut;

                                //MoreBating
                                document.getElementById("getBowled").innerHTML = json.getBowled;
                                document.getElementById("getCatch").innerHTML = json.getCatch;
                                document.getElementById("getHitWicket").innerHTML = json.getHitWicket;
                                document.getElementById("getLBW").innerHTML = json.getLBW;
                                document.getElementById("getStump").innerHTML = json.getStump;
                                document.getElementById("getRunOut").innerHTML = json.getRunOut;
                                document.getElementById("totalNotOut").innerHTML = json.totalNotOut;

                                //MoreBowling
                                document.getElementById("doBowled").innerHTML = json.doBowled;
                                document.getElementById("doCatch").innerHTML = json.doCatch;
                                document.getElementById("doHitWicket").innerHTML = json.doHitWicket;
                                document.getElementById("doLBW").innerHTML = json.doLBW;
                                document.getElementById("doStump").innerHTML = json.doCatch;
                                document.getElementById("pId").innerHTML = json.playerId;

                                $('#target').attr('src', `/Home/images/Players/${json.fileName}`);
                                var prettyPhotoSrc = $("#prettyPhoto").attr("href");
                                $("#prettyPhoto").attr("href", prettyPhotoSrc.substr(0, prettyPhotoSrc.lastIndexOf('/') + 1) + json.fileName);
                                $('#season').val('').trigger('change');
                                $('#matchTypeId').val('').trigger('change');
                            })
                            .catch(err => {
                                console.error(err);
                            })
                    }
                })
                .catch(err => {
                    console.error(err);
                });

        };

        function Delete(PlayerId) {
            document.getElementById("PlayerId").value = PlayerId;
        }

        function clearFilter() {
            $("#teamId").val('').trigger('change');
            $("#playerRoleId").val('').trigger('change');
            $("#battingStyleId").val('').trigger('change');
            $("#bowlingStyleId").val('').trigger('change');
            document.getElementById("name").innerHTML = "";

        }

    </script>
    <style>
        #Img {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 20px;
            width: 25px;
            /*border: 1px solid #bbb;*/
        }

        #target {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 100px;
            width: 120px;
        }

        @@media only screen and (max-width: 768px) {
            /* For mobile phones: */
            .material-icons.md-14 {
                font-size: 14px;
            }

            body {
                font-size: 1em;
            }
        }


        th {
            text-align: center !important;
        }


        #filter-panel {
            border: 1px solid #bbb;
        }

        .container-canvas {
            /* This could be done in one single declaration. See the extended sample. */
            margin-right: auto;
            margin-left: auto;
            width: 800px;
            height: 500px;
        }


        body {
            font-size: 1em;
        }
    </style>

}
