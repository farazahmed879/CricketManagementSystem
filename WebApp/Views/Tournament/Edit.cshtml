@model WebApp.ViewModels.Tournamentdto

@{
    ViewData["Title"] = "Edit Tournament";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
<br />
<br />
<br />
<input type="hidden" id="RequestVerificationToken"
       name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">

<div class="container-fluid">
    <div class='col-md-1'></div>
    <div class="col-md-10">
        <div class="row">
            <div class="container-fluid">
                <ol class="breadcrumb">
                    <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                    <li><a asp-controller="Tournament" asp-action="Index">Tournament</a></li>
                    <li><a>Edit</a></li>
                </ol>
            </div>
            <form id="TournamentForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="col-md-8">
                    <input type="hidden" id="TournamentId" asp-for="TournamentId" />

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Tournament Name<i class="fa fa-asterisk" style="color: red" aria-hidden="true"></i></label>
                            <input asp-for="TournamentName" class="form-control" />
                            <span asp-validation-for="TournamentName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Organizor" class="control-label"></label>
                            <input asp-for="Organizor" class="form-control" />
                            <span asp-validation-for="Organizor" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Starting Date</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <input type="text" asp-for="StartingDate" class="form-control pull-right" id="datepicker">
                            </div>
                            <!-- /.input group -->
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <span id="span" style="color: red"></span>
                    <img class="img-responsive" id="TournamentImg" src="~/Home/images/Tournament/@Model.FileName" />
                    <label asp-for="TournamentImage" class="btn btn-box-tool">
                        <i class="far fa-picture-o"> Upload</i> <input asp-for="TournamentImage" type="file" class="hidden" style="height:auto" />
                    </label>
                    <label id="RemoveImage" class="btn btn-box-tool">
                        <i class="far fa-trash-alt"> Remove</i>
                    </label>

                </div>


            </form>

        </div>
        <div id="snackbar"></div>
        <div class="footer">
            <ul class="list-inline">
                <li><input id="BackBtn" type="button" value="Back" class="btn btn-default"></li>
                <li><input id="TournamentCreate" type="button" value="Save" class="btn btn-outlined btn-primary"></li>
            </ul>
        </div>
    </div>
    <div class='col-md-1'></div>

</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link rel="stylesheet" href="~/plugins/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <script src="~/plugins/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="~/plugins/iCheck/icheck.min.js"></script>
    <style>
        #TournamentImg {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 160px;
            width: 170px;
            border: 1px solid #bbb;
        }
    </style>
    <script>
        //Date picker
        $('#datepicker').datepicker({
            autoclose: true
        })


        $(function () {
            $('#BackBtn').click(function () {
                window.location = '/Tournament/Index'
            });
        });

        $(function () {
            $('#RemoveImage').click(function () {
                $('#TournamentImg').removeAttr('src');
            });

        });

        $("#TournamentImage").change(function () {
            readURL(this);
        });

        function readURL(input) {
            var size = input.files[0].size / 1021 / 1024;
            if (size <= 2) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        //$('#PlayerImg').attr('src', e.target.result);
                        const TournamentImg = document.getElementById('TournamentImg');
                        TournamentImg.style.backgroundImage = "url(" + e.target.result + ")";
                        TournamentImg.style.backgroundPosition = "cover";
                    }

                    reader.readAsDataURL(input.files[0]);
                    document.getElementById("span").innerHTML = ""
                }
            } else {
                //var data = "image size must be less than 2mb";
                document.getElementById("span").innerHTML = "max 2mb"
                const TournamentImg = document.getElementById('TournamentImg');
                TournamentImg.style.backgroundImage = "";
            }
        }

        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }
        $(document).on('click', '#TournamentCreate', function (e) {
            $('#TournamentCreate').attr("disabled", "disabled");
            var form = $("#TournamentForm").closest("form");
            var formData = new FormData(form[0]);
            $.ajax({
                type: "Put",
                data: formData,
                headers: {
                    'X-CSRF-TOKEN': document.getElementById("RequestVerificationToken").value,
                },
                dataType: "json",
                url: "/Tournament/Edit",
                processData: false,
                contentType: false,
                success: function (data) {
                    myFunction(data);
                    window.location = '/Tournament/Index'
                },
                fail: function (data) {
                    myFunction(data);
                }
            })
        });


    </script>
}
