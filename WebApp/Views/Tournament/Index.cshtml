@model PaginatedList<WebApp.ViewModels.Tournamentdto>

@{
    ViewData["Title"] = "Tournaments";
}
<br />
<br />
<br />
<br />

<div class="container-fluid">

    <div class='col-md-1'></div>
    <div class="col-md-10">
        <div class="row">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a>Tournament</a></li>
            </ol>
        </div>
        <div class="container-fluid">
            @if (User.Identity.IsAuthenticated)
            {
                <div class="form-group">
                    <a asp-controller="Tournament" class="btn btn-primary" asp-action="Create">Add</a>
                </div>

            }
            <div class="table-responsive">
                <table id="TournamentTable" class="table table-bordered table-striped">
                    <thead class="bg-blue-active">
                        <tr>
                            <th>
                                Tournament
                            </th>
                            <th>
                                Organizor
                            </th>
                            <th>
                                Starting Date
                            </th>
                            <th>
                                Actions
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TournamentName)

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Organizor)

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StartingDate)

                                </td>
                                <td>
                                    @if (User.Identity.IsAuthenticated)
                                    {

                                        <div class="btn-group">
                                            <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                                                <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a asp-controller="Matches" asp-action="Create" asp-route-tournamentId="@item.TournamentId" data-placement="left" data-toggle="tooltip" title="New Match"><i class="flaticon-add-1"></i> New Match</a></li>
                                                <li> <a asp-controller="Matches" asp-action="Index" asp-route-tournamentId="@item.TournamentId" data-placement="left" data-toggle="tooltip" title="Match List"><i class="flaticon-cricket-4"></i> Tour Matches</a></li>
                                            </ul>
                                        </div>
                                        <a data-toggle="tooltip" data-placement="top" title="Edit Mode" asp-action="Edit" asp-route-id="@item.TournamentId"><i class="fas fa-edit"></i></a>
                                        <a data-placement="top" title="Delete" data-toggle="tooltip"><i data-toggle="modal" data-target="#DeleteModal" class="fas fa-trash-alt" style="cursor: pointer" onclick="Delete(@item.TournamentId)"></i></a>

                                    }
                                    else
                                    {
                                        <div class="btn-group">
                                            <a asp-controller="Matches" asp-action="Index" asp-route-tournamentId="@item.TournamentId" data-placement="top" data-toggle="tooltip" title="Matches"><i class="flaticon-cricket-4"></i></a>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var prev1Disabled = !Model.HasPreviousPage ? "hide" : "";
                    var prev2Disabled = !Model.HasPreviousTwo ? "hide" : "";
                    var prev3Disabled = !Model.HasPreviousThree ? "hide" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    var next1Disabled = !Model.HasNextPage ? "hide" : "";
                    var next2Disabled = !Model.HasNext2 ? "hide" : "";
                    var next3Disabled = !Model.HasNext3 ? "hide" : "";
                }
            </div>
            <nav class="navbar navbar-light bg-light">

                <form class="form-inline">
                    <div class="col-md-12">
                        <span class="fa-1x">
                            <strong class="text-primary">Showing @Model.PageStartValue to @Model.PageEndValue of @Model.TotalCount entries</strong>
                        </span>
                        <span class="fa-1x pull-right">
                            <strong class="text-primary">Page # @Model.PageIndex of @Model.TotalPages pages</strong>
                        </span>
                    </div>
                    <div class="row pull-right">
                        <a data-placement="top" data-toggle="tooltip" title="First Page" asp-action="Index" class="btn btn-primary @prevDisabled"
                           asp-route-page="@(1)">
                            First
                        </a>

                        <a asp-action="Index" class="btn btn-default @prev3Disabled"
                           asp-route-page="@(Model.PageIndex - 3)">@(Model.PageIndex - 3)</a>
                        <a asp-action="Index" class="btn btn-default @prev2Disabled"
                           asp-route-page="@(Model.PageIndex - 2)">@(Model.PageIndex - 2)</a>
                        <a asp-action="Index" class="btn btn-default @prev1Disabled"
                           asp-route-page="@(Model.PageIndex - 1)">@(Model.PageIndex - 1)</a>

                        <a asp-action="Index" class="btn btn-primary disabled"
                           asp-route-page="@(Model.PageIndex)">@(Model.PageIndex)</a>

                        <a asp-action="Index" class="btn btn-default @next1Disabled"
                           asp-route-page="@(Model.PageIndex + 1)">@(Model.PageIndex + 1)</a>
                        <a asp-action="Index" class="btn btn-default @next2Disabled"
                           asp-route-page="@(Model.PageIndex + 2)">@(Model.PageIndex + 2)</a>
                        <a asp-action="Index" class="btn btn-default @next3Disabled"
                           asp-route-page="@(Model.PageIndex + 3)">@(Model.PageIndex + 3)</a>

                        <a data-placement="top" data-toggle="tooltip" title="Last Page" asp-action="Index"
                           asp-route-page="@(Model.TotalPages)"
                           class="btn btn-primary @nextDisabled">
                            Last
                        </a>

                    </div>
                </form>
            </nav>
        </div>
    </div>
    <div class='col-md-1'></div>
</div>

<div id="snackbar"></div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="TournamentId" />
                <h3>Are you sure you want to delete this?</h3>

                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js"></script>

    <style>
        td {
            text-align: center !important;
            margin-left: 2em;
        }

        th {
            text-align: center !important;
            margin-left: 2em;
        }
    </style>

    <script>
        $(function () {
            $('#createBtn').click(function () {
                window.location = '/Tournament/Create'
            });
        });

        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }

        $(document).ready(function () {
            $('#TournamentTable').DataTable({
                dom: 'B',
                "order": [],
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        className: 'btn btn-primary'
                        //orientation: 'landscape',
                        //pageSize: 'LEGAL'
                    }
                ]
            });
        });


        function Delete(TournamentId) {
            document.getElementById("TournamentId").value = TournamentId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const tournamentId = document.getElementById('TournamentId').value;
            const model = {
                tournamentId: Number(tournamentId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Tournament/DeleteConfirmed?tournamentId=${tournamentId}`, {
                method: "POST",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                var data = "Record is deleted successfully";
                window.location.reload();
                myFunction(data);
                return;
            } else {
                var data = "Record could not be deleted";
                myFunction(data);
            }
        };

    </script>

}
