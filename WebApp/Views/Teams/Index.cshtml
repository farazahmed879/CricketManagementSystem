@model PaginatedList<WebApp.ViewModels.Teamdto>

@{
    ViewData["Title"] = "Teams";
}
<br />
<br />
<br />
<br />
<div class="container-fluid">

    <div class='col-md-1'></div>
    <div class="col-md-10">
        <div class="row">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li><a>Team</a></li>
            </ol>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="center fade-down section-heading">
                    <h2 class="main-title">Cricket Clubs</h2>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div id="filter-panel" style="border: 1px solid #bbb;" class="collapse filter-panel">
                <div class="panel-body">
                    <form class="form-inline" role="form" id="Filters">
                        <div class="row">
                            <div class="col-xs-4 col-md-4">
                                <label>Team Name</label>
                                <input id="name" name="name" placeholder="Gulzar Cricket Club" class="form-control">
                            </div>
                            <div class="col-xs-4 col-md-4">
                                <label>Zone</label>
                                <input type="number" id="zone" name="zone" placeholder="4" class="form-control">
                            </div>
                            <div class="col-xs-4 col-md-4">
                                <label>Location</label>
                                <input id="location" name="location" placeholder="Malir City" class="form-control">
                            </div>
                        </div>
                        <br />
                        <div class="footer" style="margin-top : .5em">
                            <ul class="list-inline">
                                <li><input id="Clear" type="button" value="Clear" class="btn btn-default"></li>
                                <li><input type="button" id="filterdata" value="Search" class="btn btn-outlined btn-primary"></li>
                            </ul>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <ul class="list-inline">
            <li>
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="form-group">
                        <a asp-controller="Teams" class="btn btn-outlined btn-primary" asp-action="Create">Add</a>
                    </div>

                }
            </li>
            <li>
                <button class="btn btn-default" data-toggle="collapse" data-target="#filter-panel">
                    Advanced Search
                </button>
            </li>
        </ul>

        <div class="table-responsive">
            <table id="TeamTable" class="table table-bordered table-striped">
                <thead style="background-color: maroon; color: white">
                    <tr>

                        <th>
                            Team
                        </th>

                        <th>
                            Region
                        </th>

                        <th>
                            Action
                        </th>

                    </tr>
                </thead>
                @*<tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <ul class="list-inline">
                                        <li>
                                            <img class="img-responsive" id="Img" src="~/Home/images/Teams/@item.FileName">
                                        </li>
                                        <li> <b>@Html.DisplayFor(modelItem => item.Team_Name)</b></li>
                                    </ul>




                                </td>

                                <td>
                                    <b> @Html.DisplayFor(modelItem => item.City) zone-@item.Zone </b>
                                </td>


                                <td>
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-outlined btn-primary dropdown-toggle" data-toggle="dropdown">
                                                <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu">

                                                <li><a data-placement="left" data-toggle="tooltip" title="Players" asp-controller="Players" asp-action="PlayersList" asp-route-teamId="@item.TeamId"><i class="flaticon-cricket-2"></i> Team Players</a></li>
                                                <li><a data-placement="left" data-toggle="tooltip" title="Matches" asp-controller="Matches" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="flaticon-cricket-4"></i> Team Matches</a></li>
                                                <li><a data-placement="left" data-toggle="tooltip" title="Schedule" asp-controller="Schedule" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="flaticon-history"></i> Schedule</a></li>
                                                <li><a data-placement="left" data-toggle="tooltip" title="Details" asp-action="Details" asp-route-teamId="@item.TeamId"><i class="flaticon-appointment"></i> Details</a></li>
                                            </ul>
                                        </div>
                                        <a data-placement="top" data-toggle="tooltip" title="Add Player" asp-controller="Players" asp-action="create" asp-route-teamId="@item.TeamId"><i class="fas fa-user-alt"></i></a>
                                        <a data-placement="top" data-toggle="tooltip" title="Edit Mode" asp-action="Edit" asp-route-id="@item.TeamId"><i class="fas fa-edit"></i></a>
                                        <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(@item.TeamId)" class="fas fa-trash-alt"></i></a>


                                    }
                                    else
                                    {
                                        <a data-placement="top" data-toggle="tooltip" title="Players" asp-controller="Players" asp-action="PlayersList" asp-route-teamId="@item.TeamId"><i class="flaticon-cricket-helmet"></i></a>
                                        <a data-placement="top" data-toggle="tooltip" title="Schedule" asp-controller="Schedule" asp-action="Index" asp-route-teamId="@item.TeamId"><i class="fas fa-clock-o"></i></a>
                                        <a data-placement="left" data-toggle="tooltip" title="Details" asp-action="Details" asp-route-teamId="@item.TeamId"><i class="fas fa-info-circle"></i></a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>*@
            </table>


        </div>

    </div>
    <div class='col-md-1'></div>
</div>
<div id="snackbar"></div>
<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header bg-red">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="TeamId" />
                <h3>Are you sure you want to delete this?</h3>
                <br />
                <div class="wizard-footer">
                    <div class="pull-right">

                    </div>
                    <div class="pull-left">
                        <input type='button' class='btn btn-previous btn-fill btn btn-outlined btn-primary btn-wd' data-dismiss="modal" value='Cancel' />
                        <input id="deleteBtn" type="button" class='btn btn-finish btn-fill btn-outlined btn-primary btn-wd' data-dismiss="modal" value='Delete' />
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
    <input id="IsAuthenticated" hidden value="@Html.Raw(User.Identity.IsAuthenticated)" />

    <script>
        var IsAuthenticated = $("#IsAuthenticated").val() === "True";
        //Select2
        $('.js-example-basic-single').select2();

        var dataTable = $('#TeamTable').DataTable({
            processing: true,
            serverSide: true,
            "paging": true,
            dom: 'Brtipl',
            "order": [],
            ajax: {
                url: "Teams/Index?isApi=true",
                type: "GET",
                dataType: "json"
            },
            columns: [
                {
                    className: "font-15 text-left",
                    orderable: false,
                    data: 'team_Name',
                    render: function (PlayerName, Image, row, meta) {
                        debugger;
                        return '<ul class="list-inline">' +
                            '<li><img class="img-responsive" id="Img" src="Home/images/Players/' + row.fileName + '"></li>' +
                            '<li><b>' + row.team_Name + '</b></li>' +
                            '</ul>';
                    }
                },
                {
                    className: "font-15 text-left",
                    orderable: false,
                    data: 'city',
                    name: 'zone'
                },
                {
                    data: 'teamId',
                    "render": function (data, type, row, meta) {
                        return (IsAuthenticated ? ' <div class="btn-group"><button type="button" class="btn btn-outlined btn-primary dropdown-toggle" data-toggle="dropdown">' +
                            '<span class="caret"></span></button>' +
                            '<ul class="dropdown-menu">' +
                            '<li><a data-placement="left" class="cursor" data-toggle="tooltip" title="Players" onclick="PlayersList(' + data + ')"><i class="flaticon-cricket-2"></i> Team Players</a></li>' +
                            '<li><a data-placement="left" class="cursor" data-toggle="tooltip" title="Matches" onclick="AllMatches(' + data + ')"><i class="flaticon-cricket-4 cursor"></i> Team Matches</a></li>' +
                            '<li><a data-placement="left" class="cursor" data-toggle="tooltip" title="Schedule" onclick="Schedule(' + data + ')"><i class="flaticon-history cursor"></i> Schedule</a></li>' +
                            '<li><a data-placement="left" class="cursor" data-toggle="tooltip" title="Details" onclick="Details(' + data + ')"><i class="flaticon-appointment cursor"></i> Details</a></li> </ul> </div>' :
                            '<a data-placement="left" class="cursor" data-toggle="tooltip" title="Players" onclick="PlayersList(' + data + ')"><i class="flaticon-cricket-2 cursor"></i></a>' +
                            '<a data-placement="left" class="cursor" data-toggle="tooltip" title="Matches" onclick="AllMatches(' + data + ')"><i class="flaticon-cricket-4 cursor"></i></a>' +
                            '<a data-placement="left" class="cursor" data-toggle="tooltip" title="Schedule" onclick="Schedule(' + data + ')"><i class="flaticon-history cursor"></i></a>' +
                            '<a data-placement="left" class="cursor" data-toggle="tooltip" title="Details" onclick="Details(' + data + ')"><i class="flaticon-appointment cursor"></i></a>'
                        ) +
                            (IsAuthenticated ? ' <a data-placement="top" data-toggle="tooltip" title="Add Player" onclick="AddPlayers(' + data + ')"><i class="fas fa-user-alt cursor"></i></a>' : "") +
                            (IsAuthenticated ? ' <a data-placement="top" data-toggle="tooltip" title="Edit Mode" onclick="EditMode(' + data + ')"><i class="fas fa-edit cursor"></i></a>' : "") +
                            (IsAuthenticated ? ' <a data-placement="top" data-toggle="tooltip" style="cursor:pointer" title="Delete"><i data-toggle="modal" data-target="#DeleteModal" onclick="Delete(' + data + ')" class="fas fa-trash-alt"></i></a>' : "");
                    }
                }
            ],
            buttons: [
                {
                    extend: 'pdfHtml5',
                    className: 'btn btn-default'
                    //orientation: 'landscape',
                    //pageSize: 'LEGAL'
                }
            ]
        });



        $('#filterdata').click(async function () {
            var name = $("#name").val();
            var zone = $("#zone").val();
            var location = $("#location").val();
            dataTable.ajax.url("Teams/Index?name=" + name + "&zone=" + zone + "&location=" + location + "&isApi=true").load();
            //await fetch(, {
            //    credentials: 'same-origin'
            //});
        });

        let EditMode = function (id) {
            window.location = `/Team/Edit/${id}`
        }

        let PlayersList = function (id) {
            window.location = `/Players/PlayersList/${id}`
        }

        let AllMatches = function (teamId) {
            window.location = `/Matches/Index?teamId=${teamId}`
        }

        let Schedule = function (id) {
            window.location = `/Schedule/Index/${id}`
        }

        let Details = function (id) {
            window.location = `/Team/Details/${id}`
        }

        let AddPlayers = function (id) {
            window.location = `/Team/Create?teamId${id}`
        }

        function Delete(TeamId) {
            document.getElementById("TeamId").value = TeamId;
        }

        $("#deleteBtn")
            .off()
            .on("click", async () => await DeleteData());

        const DeleteData = async () => {
            const teamId = document.getElementById('TeamId').value;
            const model = {
                teamId: Number(teamId),
            };
            var header = new Headers();
            header.append("content-type", "application/json");

            const response = await fetch(`/Team/DeleteConfirmed/${teamId}`, {
                method: "Delete",
                body: JSON.stringify(model),
                credentials: 'same-origin',
                headers: header
            });

            if (response.ok) {
                var data = "Record is deleted successfully";
                window.location.reload();
                myFunction(data);
                return;
            } else {
                var data = "Record could not be deleted";
                myFunction(data);
            }
        };



        $(function () {
            $('#createBtn').click(function () {
                window.location = '/Teams/Create'
            });
        });


        function myFunction(data) {
            var snackBar = document.getElementById('snackbar');
            snackBar.textContent = data;
            snackBar.className = "show";
            setTimeout(function () { snackBar.className = snackBar.className.replace("show", ""); }, 3000);
        }
    </script>


    <style>
        /*td {
            text-align: center !important;
        }*/

        th {
            text-align: center !important;
        }

        #Img {
            background-image: url('');
            background-size: cover;
            background-position: center;
            height: 20px;
            width: 25px;
            /*border: 1px solid #bbb;*/
        }

        /*.btn-disabled,
        .btn-disabled[disabled] {
            opacity: .4;
            cursor: default !important;
            pointer-events: none;
        }*/



    </style>
}
